// This is the profile for openIMIS Group 
// Mapping is done throught Insuree and Family openIMIS entities
Profile: OpenIMISGroup
Parent: Group
Id: openimis-group
Title: "openIMIS Group"
Description: "Defines a Group for openIMIS which maps to an Family"

* id
  * ^short = "Group UUID"
  * ^definition = "Group/Family UUID generated by openIMIS."

* identifier 1..* MS // Must contain at least the Insuree Code
* identifier.type 1..1  
* identifier.type.coding.code from OpenIMISIdentifierVS (required)
* identifier ^slicing.discriminator.type = #value
* identifier ^slicing.discriminator.path = "type.coding.code"
* identifier ^slicing.rules = #closed
* identifier contains
    FamilyUUID 0..1 and
    FamilyID 0..1
* identifier[FamilyUUID].type.coding.code = OpenIMISIdentifierCS#UUID
  * ^short = "Group openIMIS UUID"
  * ^definition = "Group/Family UUID generated by openIMIS."
* identifier[FamilyID].type.coding.code = OpenIMISIdentifierCS#DBID
  * ^short = "Group openIMIS Database ID"
  * ^definition = "Group/Family Database ID generated by openIMIS."

* active 0..1 
  * ^short = "Active Policy"
  * ^definition = "Mentions if the Group/Family has an Active Policy."

* type = GroupTypeCS#person // always person
* actual = true // always true
* code 0..0 // not used

* name 0..1 // The name by which the Group/Family is known
  * ^short = "Group/Family official name"
  * ^definition = "Group/Family name based on Patient/Insuree official family and given names."

* quantity 1..1
* managingEntity 0..0
* characteristic 0..0

* member 1..*
  * entity only Reference(OpenIMISPatient)
  * period 0..0
  * inactive 0..0

* extension contains GroupAddressExtension named address 1..1 MS // Family address => state->district->extension[municipality]->city
* extension[address].valueAddress
  * type = AddressType#physical
  * use = AddressUse#home // mapped to Family address
  * country 0..0 // Not used 
  // Location.LocationName from Family's Region (Family.LocationId.ParentLocationId.ParentLocationId.ParentLocationId)
  * state 0..1 MS // mapped to Region (see previous two comments) !!!
    * ^short = "State/Region"
    * ^definition = "Insuree's State/Region name as it is configured in openIMIS."
  // Location.LocationName from Family's District (Family.LocationId.ParentLocationId.ParentLocationId)
  * district 0..1 MS // mapped to District (see previous two comments) !!!
    * ^short = "District"
    * ^definition = "Insuree's District name as it is configured in openIMIS."
  // Location.LocationName from Family's Ward (Family.LocationId.ParentLocationId)
  * extension contains AddressMunicipalityExtension named municipality 0..1 MS // mapped to Ward (see previous two comments) !!!
    * ^short = "Municipality/Ward"
    * ^definition = "Insuree's Municipality/Ward name as it is configured in openIMIS."
  * city 0..1 MS // Location.LocationName from Family's City (Family.LocationId)
    * ^short = "City/Village"
    * ^definition = "Insuree's City/Village name as it is configured in openIMIS."
  * postalCode 0..0 // not used
  * line 0..1 // Family.FamilyAddress or Insuree.CurrentAddress
  * extension contains AddressLocationReferenceExtension named location 1..1 MS 
    * ^short = "Group Location Reference"
    * ^definition = "Specifies the Group Location reference to the city/village level."

* extension contains GroupPovertyStatusExtension named poverty 0..1 
* extension[poverty]
  * ^short = "Group Poverty Status"
  * ^definition = "Specifies the Group's poverty status."

* extension contains GroupTypeExtension named groupType 0..1 
* extension[groupType]
  * ^short = "Group Type"
  * ^definition = "Specifies the Group's type."


