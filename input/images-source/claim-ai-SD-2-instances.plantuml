@startuml

box "openIMIS Instance" #lightpink
  participant "FHIR Module" as FHIR
  participant "Claim-AI Quality Module" as Quality
end box

box "Claim-AI Instance" #lightblue
  participant "FHIR Module" as FHIR_AI
  participant "Claim Module" as Claim
  participant "openIMIS DB" as DB
  participant "Claim-AI Module" as AI
end box

autonumber

[-> Quality: Scheduled/Event signal
activate Quality
activate FHIR_AI

Quality->FHIR: Build FHIR Claim
activate FHIR
Quality<--FHIR: FHIR Claim \nwith Contained Resources
deactivate FHIR

Quality->FHIR_AI: Send FHIR Claim \nwith Contained Resources

FHIR_AI->FHIR_AI: Validate FHIR Claim

alt FHIR Claim Bundle valid

  FHIR_AI->Claim: Call\nEnterAndSubmitClaims(noCheck)
  activate Claim
  Claim->DB: Save Claim
  activate DB
  DB-->Claim: Claim Saved
  deactivate DB
  
  Claim->AI: Trigger ClaimSubmitted Signal
  activate AI
  FHIR_AI<--Claim: Claim submitted
  FHIR_AI-->Quality: Claim Accepted

  Quality->Quality: Create scheduled task\nto retrieve response
  
  deactivate Claim

  AI->DB: Read Claim
  activate DB
  DB-->AI: Claim
  deactivate DB
  AI->AI: Adjudicate\nClaim
  AI->DB: Update Claim
  activate DB 
  DB-->AI: Claim updated
  deactivate DB
  
  deactivate AI
  
  ...

  [-> Quality: Scheduled/Event signal

  Quality->FHIR_AI: Get FHIR ClaimResponse
  
  FHIR_AI->Claim: Call\nGetClaim()
  activate Claim
  Claim->DB: Read Claim
  activate DB
  DB-->Claim: Claim
  deactivate DB
  
  Claim-->FHIR_AI: Claim
  deactivate Claim
  
  FHIR_AI-->Quality: Send FHIR ClaimResponse 

  Quality->Quality: Update ClaimResponses status

  Quality->FHIR: Save FHIR ClaimResponse 
  activate FHIR
  Quality<--FHIR: FHIR ClaimResponse Saved
  deactivate FHIR

else FHIR Claim Bundle not valid

FHIR_AI->Quality: ClaimValidationError

end



deactivate Quality

@enduml